name: CI

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: true

    steps:
    - name: Install IPFS
      run: |
        IPFS_BUILD=linux
        if [[ ${{ matrix.os }} =~ macos-[a-zA-Z0-9_] ]]; then IPFS_BUILD=darwin; fi
        mkdir $HOME/opt
        pushd $HOME/opt
        curl -s -L https://dist.ipfs.io/go-ipfs/v0.4.22/go-ipfs_v0.4.22_$IPFS_BUILD-amd64.tar.gz | tar zxf - go-ipfs/ipfs
        popd
        $HOME/opt/go-ipfs/ipfs init
        echo "::add-path::$HOME/opt/go-ipfs"
      timeout-minutes: 2
    - name: Get the initial data
      run: |
        curl -s -o ipfs-logo.png https://ipfs.io/ipfs/QmNTKe2CkWCCnwrBi2XnzYURjtJsmz4wSGrhUggPP41QHV
    - name: Initialize IPFS
      run: |
        ipfs init || echo "Oops... Already initialized?"
    - name: Publishing a file
      run: |
        ipfs add ipfs-logo.png
      timeout-minutes: 1
    - name: Retrieving the file
      run: |
        ipfs get QmU8aD2WqwHhnWx1Kmx98KemH1wKVuPFG6pjuYZx7SE3TM --output out.png
        diff -s out.png ipfs-logo.png
      timeout-minutes: 1
    - name: Publishing a directory
      run: |
        mkdir logo
        cp ipfs-logo.png logo
        ipfs add -r logo
      timeout-minutes: 1
    - name: Starting a node
      run: |
        ipfs daemon & sleep 30
        ipfs swarm peers
      timeout-minutes: 5
    - name: Saving data
      run: |
        ipfs pin add /ipfs/QmNhFJjGcMPqpuYfxL62VVB9528NXqDNMFXiqN5bgFYiZ1/its-time-for-the-permanent-web.html
        ipfs get Qmcx3KZXdANNsYfSRU1Vu4pchM8mvYXH4N8Zwdpux57YNL -o article.html
      timeout-minutes: 5
    - name: Summary
      run: |
        echo Bye!
